image: {}
service:
  type: NodePort
  externalPort: 80
  internalPort: 80

autoscaler:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

enableAuthEndpoint: false
enableWebAccessControl: false
enableCkanRedirection: false

# -- a list of authentication plugin config item. 
# Each authentication plugin config item can contain the following fields:
# <ul>
# <li>`key`: (string) the unique key of the auth plugin. Allowed characters: [a-zA-Z0-9\-] </li>
# <li>`baseUrl`: (string) the `baseUrl` where gateway proxy request to. </li>
# </ul>
# More info on authentication plugin see [Authentication Plugin Specification](https://github.com/magda-io/magda/blob/master/docs/docs/authentication-plugin-spec.md)
authPlugins: []

auth:
  # auth.enableInternalAuthProvider -- Whether enable magda internal authentication provider. 
  # @default -- true
  enableInternalAuthProvider: true

helmet:
  frameguard: false

resources:
  requests:
    cpu: 50m
    memory: 40Mi
  limits:
    cpu: 200m

# -- Routes list here are available under `/api/v0/` path.
# See [Proxy Target Definition](#proxy-target-definition) section below for route format.
# @default -- Default value see [defaultRoutes Default Value](#default-value-for-defaultroutes-field) section below
defaultRoutes:
  search:
    to: http://search-api/v0
    auth: true
  registry:
    to: http://registry-api/v0
    auth: true
  registry-read-only:
    to: http://registry-api-read-only/v0
    auth: true
  registry-auth: #left here for legacy reasons - use /registry
    to: http://registry-api/v0
    auth: true
  auth:
    to: http://authorization-api/v0/public
    auth: true
  opa:
    to: http://authorization-api/v0/opa
    auth: true
    statusCheck: false
  admin:
    to: http://admin-api/v0
    auth: true
  content:
    to: http://content-api/v0
    auth: true
  storage:
    to: http://storage-api/v0
    auth: true
  correspondence:
    to: http://correspondence-api/v0/public
  apidocs:
    to: http://apidocs-server/
    redirectTrailingSlash: true
  tenant:
    to: http://tenant-api/v0
    auth: true

# -- extra web routes.
# See [Proxy Target Definition](#proxy-target-definition) section below for route format.
webRoutes:
  preview-map: http://preview-map:6110

# web -- Default web route. 
# This is the last route of the proxy.
# Main UI should be served from here.
web: http://web

csp:
  browserSniff: false
  directives:
    scriptSrc:
    - "''self''"
    - "''unsafe-inline''"
    - browser-update.org
    - "blob:"
    objectSrc:
    - "''none''"
    workerSrc:
    - "''self''"
    - "blob:"

cors:
  exposedHeaders:
  - "Content-Range"
  - "X-Content-Range"
  - "Accept-Ranges"
  - "Content-Length"
  - "x-magda-event-id"

# -- Session cookie settings. <br/>
# Default value will be used if any options are left with blank.<br/>
# More info: https://github.com/expressjs/session#cookie <br/>
# Supported options are:<br/>
# <ul>
# <li>`expires`: A fix cookie expire date. The expires option should not be set directly; instead only use the maxAge option.</li>
# <li>`httpOnly`: Default: true.</li>
# <li>`maxAge`: Default: 7 * 60 * 60 * 1000.</li>
# <li>`path`: Default: '/'.</li>
# <li>`sameSite`: Default: false (not set).</li>
# <li>`secure1: Default: false (not set).</li>
# </ul>
cookie:
  sameSite: "lax"

# defaultCacheControl -- If a response that goes through the gateway doesn't set Cache-Control, it'll be set to this value. Set to null to disable.
defaultCacheControl: "public, max-age=60"