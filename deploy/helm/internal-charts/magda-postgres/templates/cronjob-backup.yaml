{{- if .Values.backupRestore.backup.enabled -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ .Values.postgresql.fullnameOverride }}-backup-jobs"
spec:
  concurrencyPolicy: Forbid
  schedule: {{ .Values.backupRestore.backup.schedule | quote }}
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 120
  jobTemplate:
    spec:
      backoffLimit: 3
      completions: 1
      parallelism: 1
      template:
        metadata:
          name: "{{ .Values.postgresql.fullnameOverride }}-backup-job"
          labels:
            cron: "{{ .Values.postgresql.fullnameOverride }}-backup-jobs"
        spec:
{{- include "magda.pullSecrets" . | indent 10 }}
          containers:
          - image: "{{ .Values.backupRestore.image.repository }}:{{ .Values.backupRestore.image.tag }}"
            imagePullPolicy: "{{ .Values.backupRestore.image.pullPolicy }}"
            name: db-backup
            command:
              - "/bin/sh"
              - "-c"
              - |
                /usr/bin/envdir /etc/wal-g.d/env /usr/local/bin/wal-g backup-push
                /usr/bin/envdir /etc/wal-g.d/env /usr/local/bin/wal-g delete --confirm retain FULL {{ .Values.backupRestore.backup.archiveTimeout | default 7 }}
{{- if not (empty .Values.backupRestore.storageSecretName) }}
            volumeMounts:
              - name: storage-secret
                mountPath: /etc/wal-g.d/env
{{- end }}
{{- if not (empty .Values.backupRestore.storageConfig) }}
            env:
              - name: PGHOST
                value: "{{ .Values.postgresql.fullnameOverride }}-postgresql"
{{- include "magda.postgres-superuser-env" . | indent 14 }}
            {{- range $key, $value := .Values.backupRestore.storageConfig }}
            {{- if not (empty $key) }}
              - name: {{ $key | quote }}
                value: {{ $value | quote }}
            {{- end }}
            {{- end }}
{{- end }}
          restartPolicy: OnFailure
{{- if not (empty .Values.backupRestore.storageSecretName) }}
          volumes:
            - name: storage-secret
              secret:
                secretName: "{{ .Values.backupRestore.storageSecretName }}"
{{- end }}
{{- end }}
