{{- if .Values.global.postgresql.autoCreateSecret }}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace .Values.global.postgresql.existingSecret) }}
{{- $legacySecret := (lookup "v1" "Secret" .Release.Namespace "cloudsql-db-credentials") }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.postgresql.existingSecret | quote }}
type: Opaque
data:
{{- if $secret }}
  postgresql-password: {{ get $secret.data "postgresql-password" }}
{{- else if and $legacySecret (or .Values.global.useCloudSql .Values.global.useAwsRdsDb) }}
  postgresql-password: {{ get $legacySecret.data "password" }}
{{- else }}
  postgresql-password: {{ randAlphaNum 16 | b64enc | quote }}
{{- end }}
{{- end }}