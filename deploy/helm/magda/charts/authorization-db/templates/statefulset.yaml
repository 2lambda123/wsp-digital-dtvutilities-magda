{{- if and (not .Values.global.useCombinedDb) (not .Values.global.useCloudSql) }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: authorization-db
spec:
  serviceName: authorization-db
  replicas: 1
{{- if semverCompare "^1.7.0" (printf "%s" .Capabilities.KubeVersion) }}
  updateStrategy:
    type: RollingUpdate
{{- end }}
  template:
    metadata:
      labels:
        service: authorization-db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: authorization-db
        resources:
{{ toYaml .Values.resources | indent 10 }}
        image: {{ template "postgres" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
        ports:
        - containerPort: 5432
        env:
        - name: PGDATA
          value: /var/pv/data
        {{- template "magda.postgres-env" . }}
        volumeMounts:
        - mountPath: /var/pv
          name: auth-data
        {{- template "magda.waleGoogleStorageCredentials.volumeMount" . }}
      volumes:
      {{- template "magda.waleGoogleStorageCredentials.volume" . }}
  volumeClaimTemplates:
  - metadata:
      name: auth-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
    {{- if .Values.data.storageClass }}
      storageClassName: "{{ .Values.data.storageClass }}"
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.data.storage }}"
{{- end }}
