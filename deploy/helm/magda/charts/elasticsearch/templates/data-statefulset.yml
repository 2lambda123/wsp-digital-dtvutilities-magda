apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: es-data
  labels:
    component: elasticsearch
    role: data
spec:
  serviceName: "es-data"
  replicas: {{- if .Values.production }} 2 {{- else }} 1 {{- end }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: data
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - elasticsearch
                - key: role
                  operator: In
                  values:
                  - data
              topologyKey: kubernetes.io/hostname
      containers:
      - name: es-data
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: {{ template "dockerimage" . }}
        resources:
{{ toYaml .Values.data.resources | indent 10 }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_DATA
          value: "true"
        - name: NODE_MASTER
          value: {{ not .Values.production | quote }}
        - name: HTTP_ENABLE
          value: {{ not .Values.production | quote }}
        - name: NODE_INGEST
          value: {{ not .Values.production | quote }}
        - name: ES_JAVA_OPTS
          value: "-Xms{{ .Values.data.heapSize }} -Xmx{{ .Values.data.heapSize }}"
        - name: ES_PLUGINS_INSTALL
          value: {{ .Values.data.pluginsInstall | quote }}
{{- if not .Values.production }}
        - name: REPO
          value: /snapshots
{{- end }}
        ports:
{{- if not .Values.production }}
        - containerPort: 9200
          name: http
          protocol: TCP
{{- end }}
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
    {{- if .Values.data.storageClass }}
      storageClassName: "{{ .Values.data.storageClass }}"
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.data.storage }}"
