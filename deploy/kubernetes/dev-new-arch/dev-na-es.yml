# ElasticSearch
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: es
  labels:
    component: elasticsearch
spec:
  serviceName: es
  replicas: 1
  template:
    metadata:
      labels:
        component: elasticsearch
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1001
      containers:
      - name: es
        resources:
          requests:
            memory: 2500Mi
            cpu: 0m
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: data61/elasticsearch-kubernetes:5.2.0
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: ES_JAVA_OPTS
          value: "-Xms1500m -Xmx1500m"
        - name: REPO
          value: /snapshots
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
        - name: snapshots
          mountPath: /snapshots
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        volume.beta.kubernetes.io/storage-class: spinning-rust
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
  - metadata:
      name: snapshots
      annotations:
        volume.beta.kubernetes.io/storage-class: spinning-rust
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 200Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    component: elasticsearch
spec:
  ports:
  - name: http
    port: 9200
    targetPort: 9200
  - name: java
    port: 9300
    targetPort: 9300
  selector:
    component: elasticsearch
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-discovery
  labels:
    component: elasticsearch
spec:
  selector:
    component: elasticsearch
  ports:
  - name: transport
    port: 9300
    protocol: TCP
---
# KIBANA
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: kibana
    spec:
      containers:
      - name: kibana
        env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        resources:
          requests:
            memory: 0Mi
            cpu: 0
        image: kibana:5.2.0
        ports:
        - containerPort: 5601
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  ports:
  - name: main
    port: 5601
    targetPort: 5601
  selector:
    service: kibana
  type: "NodePort"