# Search API
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: search-api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: search-api
    spec:
      containers:
      - name: search-api
        resources:
          requests:
            memory: 0
        env:
        - name: SCALA_ENV
          value: local
        image: "localhost:5000/data61/magda-search-api:latest"
        ports:
        - containerPort: 80
        - containerPort: 8000
        volumeMounts:
        - mountPath: /usr/regions
          name: regions
      volumes:
      - name: regions
        hostPath:
          path: /tmp/regions
---
apiVersion: v1
kind: Service
metadata:
  name: search-api
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 30009
  - name: debug
    port: 8000
    targetPort: 8000
    nodePort: 30080
  selector:
    service: search-api
  type: "NodePort"
---
# Registry API
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: registry-api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: registry-api
    spec:
      containers:
      - name: registry-api
        resources:
          requests:
            memory: 0
        env:
        - name: SCALA_ENV
          value: local
        image: "localhost:5000/data61/magda-registry-api:latest"
---
apiVersion: v1
kind: Service
metadata:
  name: registry-api
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 30010
  - name: debug
    port: 8000
    targetPort: 8000
    nodePort: 30100
  selector:
    service: registry-api
  type: "NodePort"
---
# CKAN Connector
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ckan-connector
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: ckan-connector
    spec:
      containers:
      - name: ckan-connector
        resources:
          requests:
            memory: 0
        env:
        - name: SCALA_ENV
          value: local
        image: "localhost:5000/data61/magda-ckan-connector:latest"
---
apiVersion: v1
kind: Service
metadata:
  name: ckan-connector
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 30011
  - name: debug
    port: 8000
    targetPort: 8000
    nodePort: 30110
  selector:
    service: ckan-connector
  type: "NodePort"
---
# Indexer
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: indexer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: indexer
    spec:
      containers:
      - name: indexer
        resources:
          requests:
            memory: 0
        env:
        - name: SCALA_ENV
          value: local
        image: "localhost:5000/data61/magda-metadata-indexer:latest"
        volumeMounts:
        - mountPath: /usr/regions
          name: regions
      volumes:
      - name: regions
        hostPath:
          path: /tmp/regions
---
apiVersion: v1
kind: Service
metadata:
  name: indexer
spec:
  ports:
  - name: debug
    port: 8000
    targetPort: 8000
    nodePort: 30081
  selector:
    service: indexer
  type: "NodePort"
---
# ElasticSearch
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es
  labels:
    component: elasticsearch
spec:
  template:
    metadata:
      labels:
        component: elasticsearch
    spec:
      containers:
      - name: es
        resources:
          requests:
            memory: 1000Mi
          limits:
            memory: 2000Mi
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: localhost:5000/data61/elasticsearch-kubernetes:2.4.1
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: ES_HEAP_SIZE
          value: "1000m"
        - name: REPO
          value: "/snapshots"
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
        - name: snapshots
          mountPath: /snapshots
      volumes:
      - name: snapshots
        hostPath:
          path: /tmp/snapshots
      - name: "storage"
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    component: elasticsearch
spec:
  ports:
  - name: http
    port: 9200
    targetPort: 9200
    nodePort: 30092
  - name: java
    port: 9300
    targetPort: 9300
    nodePort: 30093
  selector:
    component: elasticsearch
  type: "NodePort"
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-discovery
  labels:
    component: elasticsearch
spec:
  selector:
    component: elasticsearch
  ports:
  - name: transport
    port: 9300
    protocol: TCP
---
# KIBANA
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: kibana
    spec:
      containers:
      - env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        image: seeruk/docker-kibana-sense
        resources:
          limits:
            memory: 500Mi
        name: kibana
        ports:
        - containerPort: 5601
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  ports:
  - name: main
    port: 5601
    targetPort: 5601
    nodePort: 30056
  selector:
    service: kibana
  type: "NodePort"
---
# Postgres for the Registry
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: registry-datastore
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: registry-datastore
    spec:
      containers:
      - name: registry-datastore
        image: localhost:5000/data61/registry-datastore:latest
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: registrydata
      volumes:
      - name: registrydata
        hostPath:
          path: /tmp/registrydata
---
apiVersion: v1
kind: Service
metadata:
  name: registry-datastore
spec:
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  selector:
    service: registry-datastore
