#INDEXER
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: indexer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: indexer
    spec:
      containers:
      - name: indexer
        env:
        - name: SCALA_ENV
          value: prod
        - name: MAGDA_SEARCH_ROLE
          value: indexer
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: s3-secret-key
              key: s3-secret-key
        image: "data61/magda-metadata:v${version}"
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /usr/regions
          name: regions
      volumes:
      - name: regions
        hostPath:
          path: /var/regions
---
# ElasticSearch
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es
  labels:
    component: elasticsearch
spec:
  template:
    metadata:
      labels:
        component: elasticsearch
    spec:
      containers:
      - name: es
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: data61/elasticsearch-kubernetes:2.4.1
        resources:
          limits:
            memory: 3000Mi
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: ES_HEAP_SIZE
          value: "1500m"
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
        - name: snapshots
          mountPath: /snapshots
      volumes:
      - name: snapshots
        emptyDir: {}
      - name: "storage"
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    component: elasticsearch
spec:
  ports:
  - name: http
    port: 9200
    targetPort: 9200
  - name: java
    port: 9300
    targetPort: 9300
  selector:
    component: elasticsearch
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-discovery
  labels:
    component: elasticsearch
spec:
  selector:
    component: elasticsearch
  ports:
  - name: transport
    port: 9300
    protocol: TCP
---
# KIBANA
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: kibana
    spec:
      containers:
      - env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        image: seeruk/docker-kibana-sense
        name: kibana
        ports:
        - containerPort: 5601
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  ports:
  - name: main
    port: 5601
    targetPort: 5601
  selector:
    service: kibana
  type: "NodePort"